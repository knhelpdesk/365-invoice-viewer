version: '3.8'

services:
  app:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - VITE_CLIENT_ID=${VITE_CLIENT_ID}
      - VITE_CLIENT_SECRET=${VITE_CLIENT_SECRET}
      - VITE_TENANT_ID=${VITE_TENANT_ID}
      - VITE_REDIRECT_URI=${VITE_REDIRECT_URI}
      - SESSION_SECRET=${SESSION_SECRET}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    networks:
      - invoice-network
    restart: unless-stopped
    volumes:
      - app-logs:/app/logs

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=invoice_viewer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - invoice-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - invoice-network
    restart: unless-stopped
    command: ["nginx", "-g", "daemon off;"]

volumes:
  postgres-data:
  app-logs:

networks:
  invoice-network:
    driver: bridge